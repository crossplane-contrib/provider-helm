---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: releases.helm.crossplane.io
spec:
  group: helm.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - helm
    kind: Release
    listKind: ReleaseList
    plural: releases
    singular: release
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.forProvider.chart.name
      name: CHART
      type: string
    - jsonPath: .spec.forProvider.chart.version
      name: VERSION
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .status.atProvider.revision
      name: REVISION
      type: string
    - jsonPath: .status.atProvider.releaseDescription
      name: DESCRIPTION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A Release is an example API type
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ReleaseSpec defines the desired state of a Release.
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ReleaseParameters are the configurable fields of a Release.
                properties:
                  chart:
                    description: A ChartSpec defines the chart spec for a Release
                    properties:
                      name:
                        type: string
                      pullSecretRef:
                        description: A SecretReference is a reference to a secret
                          in an arbitrary namespace.
                        properties:
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      repository:
                        type: string
                      version:
                        type: string
                    required:
                    - name
                    - repository
                    - version
                    type: object
                  namespace:
                    type: string
                  patchesFrom:
                    items:
                      description: ValueFromSource represents source of a value
                      properties:
                        configMapKeyRef:
                          description: DataKeySelector defines required spec to access
                            a key of a configmap or secret
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - name
                          - namespace
                          type: object
                        secretKeyRef:
                          description: DataKeySelector defines required spec to access
                            a key of a configmap or secret
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  set:
                    items:
                      description: SetVal represents a "set" value override in a Release
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        valueFrom:
                          description: ValueFromSource represents source of a value
                          properties:
                            configMapKeyRef:
                              description: DataKeySelector defines required spec to
                                access a key of a configmap or secret
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                namespace:
                                  type: string
                                optional:
                                  type: boolean
                              required:
                              - name
                              - namespace
                              type: object
                            secretKeyRef:
                              description: DataKeySelector defines required spec to
                                access a key of a configmap or secret
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                namespace:
                                  type: string
                                optional:
                                  type: boolean
                              required:
                              - name
                              - namespace
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  values:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  valuesFrom:
                    items:
                      description: ValueFromSource represents source of a value
                      properties:
                        configMapKeyRef:
                          description: DataKeySelector defines required spec to access
                            a key of a configmap or secret
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - name
                          - namespace
                          type: object
                        secretKeyRef:
                          description: DataKeySelector defines required spec to access
                            a key of a configmap or secret
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  wait:
                    type: boolean
                required:
                - chart
                - namespace
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              rollbackLimit:
                description: RollbackRetriesLimit is max number of attempts to retry
                  Helm deployment by rolling back the release.
                format: int32
                type: integer
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ReleaseStatus represents the observed state of a Release.
            properties:
              atProvider:
                description: ReleaseObservation are the observable fields of a Release.
                properties:
                  releaseDescription:
                    type: string
                  revision:
                    type: integer
                  state:
                    description: Status is the status of a release
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              failed:
                format: int32
                type: integer
              patchesSha:
                type: string
              synced:
                type: boolean
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.forProvider.chart.name
      name: CHART
      type: string
    - jsonPath: .spec.forProvider.chart.version
      name: VERSION
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.atProvider.state
      name: STATE
      type: string
    - jsonPath: .status.atProvider.revision
      name: REVISION
      type: string
    - jsonPath: .status.atProvider.releaseDescription
      name: DESCRIPTION
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: A Release is an example API type
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ReleaseSpec defines the desired state of a Release.
            properties:
              connectionDetails:
                items:
                  description: ConnectionDetail todo
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    skipPartOfReleaseCheck:
                      description: SkipPartOfReleaseCheck skips check for meta.helm.sh/release-name
                        annotation.
                      type: boolean
                    toConnectionSecretKey:
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: ReleaseParameters are the configurable fields of a Release.
                properties:
                  chart:
                    description: A ChartSpec defines the chart spec for a Release
                    properties:
                      name:
                        description: Name of Helm chart, required if ChartSpec.URL
                          not set
                        type: string
                      pullSecretRef:
                        description: PullSecretRef is reference to the secret containing
                          credentials to helm repository
                        properties:
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      repository:
                        description: 'Repository: Helm repository URL, required if
                          ChartSpec.URL not set'
                        type: string
                      url:
                        description: URL to chart package (typically .tgz), optional
                          and overrides others fields in the spec
                        type: string
                      version:
                        description: Version of Helm chart, late initialized with
                          latest version if not set
                        type: string
                    type: object
                  insecureSkipTLSVerify:
                    description: InsecureSkipTLSVerify skips tls certificate checks
                      for the chart download
                    type: boolean
                  namespace:
                    description: Namespace to install the release into.
                    type: string
                  patchesFrom:
                    description: PatchesFrom describe patches to be applied to the
                      rendered manifests.
                    items:
                      description: ValueFromSource represents source of a value
                      properties:
                        configMapKeyRef:
                          description: DataKeySelector defines required spec to access
                            a key of a configmap or secret
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - name
                          - namespace
                          type: object
                        secretKeyRef:
                          description: DataKeySelector defines required spec to access
                            a key of a configmap or secret
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  set:
                    items:
                      description: SetVal represents a "set" value override in a Release
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                        valueFrom:
                          description: ValueFromSource represents source of a value
                          properties:
                            configMapKeyRef:
                              description: DataKeySelector defines required spec to
                                access a key of a configmap or secret
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                namespace:
                                  type: string
                                optional:
                                  type: boolean
                              required:
                              - name
                              - namespace
                              type: object
                            secretKeyRef:
                              description: DataKeySelector defines required spec to
                                access a key of a configmap or secret
                              properties:
                                key:
                                  type: string
                                name:
                                  type: string
                                namespace:
                                  type: string
                                optional:
                                  type: boolean
                              required:
                              - name
                              - namespace
                              type: object
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  skipCRDs:
                    description: SkipCRDs skips installation of CRDs for the release.
                    type: boolean
                  skipCreateNamespace:
                    description: SkipCreateNamespace won't create the namespace for
                      the release. This requires the namespace to already exist.
                    type: boolean
                  values:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  valuesFrom:
                    items:
                      description: ValueFromSource represents source of a value
                      properties:
                        configMapKeyRef:
                          description: DataKeySelector defines required spec to access
                            a key of a configmap or secret
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - name
                          - namespace
                          type: object
                        secretKeyRef:
                          description: DataKeySelector defines required spec to access
                            a key of a configmap or secret
                          properties:
                            key:
                              type: string
                            name:
                              type: string
                            namespace:
                              type: string
                            optional:
                              type: boolean
                          required:
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  wait:
                    description: Wait for the release to become ready.
                    type: boolean
                  waitTimeout:
                    description: WaitTimeout is the duration Helm will wait for the
                      release to become ready. Only applies if wait is also set. Defaults
                      to 5m.
                    type: string
                required:
                - chart
                - namespace
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              rollbackLimit:
                description: RollbackRetriesLimit is max number of attempts to retry
                  Helm deployment by rolling back the release.
                format: int32
                type: integer
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A ReleaseStatus represents the observed state of a Release.
            properties:
              atProvider:
                description: ReleaseObservation are the observable fields of a Release.
                properties:
                  releaseDescription:
                    type: string
                  revision:
                    type: integer
                  state:
                    description: Status is the status of a release
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              failed:
                format: int32
                type: integer
              patchesSha:
                type: string
              synced:
                type: boolean
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
